struct [T] shape {
  area: u32;
  value: T;
}

struct [G] rectangle : shape<G> {
  width: u32;
  height: u32;
  pub nothing: G;
}

struct [T: rectangle<char>, G] square {
  pub inner: T;
  size: u32;

   pub static fn [G] create(size: G, inner: T): square<T, G> {
     return square<T, G> {
       inner,
       size
     };
   }
}

const r: rectangle<char> = rectangle<char> {
  area = 5 * 10,
  // failes with wrong value
  // value = true,
  value = 'b',
  width = 10,
  height = 5,
  nothing = 'o'
};

// const n = 10.0;
const n = 10;
const s: square<rectangle<char>, u32> = square.create(n, r);

const a: char = s.inner.nothing;
