#! /usr/bin/env bash

# INPUT_DIR="examples"
INPUT_DIR="input"

function run() {
  zig run src/compiler.zig -- "$1"
}

function run_log() {
  filename="$INPUT_DIR/$1.blitz"
  log=false

  if [ "$1" == "-l" ]; then
    filename="$INPUT_DIR/$2.blitz"
    log=true
  elif [ "$1" == "-p" ]; then
    shopt -s nullglob
    pattern="$INPUT_DIR/*$2*"
    matches=($pattern)

    if ((${#matches[@]})); then
      first_match="${matches[0]}"
      full_path="$(realpath "$first_match")"
      filename="$first_match"
    else
      echo "No file $pattern found"
      exit 0
    fi
  fi

  if [[ "$log" == true ]]; then
    run "$INPUT_DIR/$filename.blitz" 2>"./logs/$filename.txt"
  else
    run "$filename"
  fi

  OUT=$(echo $?)

  if [ $OUT == 0 ]; then
    echo "SUCCESS: $filename"
  else
    echo "FAIL: $filename"
  fi
}

function run_dbg_build() {
  blitzc-debug "$INPUT_DIR/$1"
}

function run_log_dbg_build() {
  if [ "$2" == "-l" ]; then
    run_dbg_build "$1.blitz" 2>./logs/"$1.txt"
  else
    run_dbg_build "$1.blitz"
  fi

  OUT=$(echo $?)

  if [ $OUT == 0 ]; then
    echo "SUCCESS: $1"
  else
    echo "FAIL: $1"
  fi
}

# use multiple methods to check if in project root
if [[ "$(pwd)" == *\/blitz ]] && [ -e "$(pwd)/build.zig" ] && [ -e "$(pwd)/.zig-cache" ]; then
  if [ "$1" == "" ]; then
    while IFS="" read -r p || [ -n "$p" ]; do
      run_log_dbg_build "$p" -l &
    done <input/working.txt
  else
    if [[ "$1" == *\.blitz ]]; then
      echo "expected filename without [.blitz] extension"
      exit 0
    fi

    run_log $@
  fi
else
  echo "expected to be in project root"
  exit 1
fi

wait
